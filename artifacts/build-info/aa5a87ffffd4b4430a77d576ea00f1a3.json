{
	"id": "aa5a87ffffd4b4430a77d576ea00f1a3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"struct1.sol": {
				"content": "pragma solidity ^0.8.15;\r\ncontract struct1{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"struct1.sol": {
				"struct1": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"struct1.sol\":26:52  contract struct1{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"struct1.sol\":26:52  contract struct1{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203799d4a91e33f78d4d00097ded1d1883fe4eeeb55d4b75dab78268677b488d1364736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203799d4a91e33f78d4d00097ded1d1883fe4eeeb55d4b75dab78268677b488d1364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP10 0xD4 0xA9 0x1E CALLER 0xF7 DUP14 0x4D STOP MULMOD PUSH30 0xED1D1883FE4EEEB55D4B75DAB78268677B488D1364736F6C634300081100 CALLER ",
							"sourceMap": "26:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203799d4a91e33f78d4d00097ded1d1883fe4eeeb55d4b75dab78268677b488d1364736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY SWAP10 0xD4 0xA9 0x1E CALLER 0xF7 DUP14 0x4D STOP MULMOD PUSH30 0xED1D1883FE4EEEB55D4B75DAB78268677B488D1364736F6C634300081100 CALLER ",
							"sourceMap": "26:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 26,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26,
									"end": 52,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 52,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 52,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 52,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 52,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 52,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26,
									"end": 52,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 52,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203799d4a91e33f78d4d00097ded1d1883fe4eeeb55d4b75dab78268677b488d1364736f6c63430008110033",
									".code": [
										{
											"begin": 26,
											"end": 52,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 52,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 52,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26,
											"end": 52,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 52,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26,
											"end": 52,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"struct1.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"struct1.sol\":\"struct1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"struct1.sol\":{\"keccak256\":\"0x126142d943f0233dda4af33e5b8384c96a90cd75985cc10431a83b0419e0e455\",\"urls\":[\"bzz-raw://ba023beedeb69f555db35526593602cfe2313837217df229c6c9d3355f37379f\",\"dweb:/ipfs/QmWsskY3ev63NvKFku5t96q4qpf48aTJLpw3dsyPWR2qmT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> struct1.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "struct1.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"struct1.sol": {
				"ast": {
					"absolutePath": "struct1.sol",
					"exportedSymbols": {
						"struct1": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".15"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "struct1",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "struct1",
							"nameLocation": "35:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "26:26:0",
							"usedErrors": []
						}
					],
					"src": "0:52:0"
				},
				"id": 0
			}
		}
	}
}